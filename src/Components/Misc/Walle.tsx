/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Solid1: THREE.Mesh
    Solid1_23: THREE.Mesh
    Solid1_24: THREE.Mesh
    Solid1_25: THREE.Mesh
    Solid1_26: THREE.Mesh
    Solid1_27: THREE.Mesh
    Solid1_28: THREE.Mesh
    Solid1_3: THREE.Mesh
    Solid1_4: THREE.Mesh
    솔리드1: THREE.Mesh
    Solid1_5: THREE.Mesh
    Solid1_6: THREE.Mesh
    Solid1_7: THREE.Mesh
    Solid1_8: THREE.Mesh
    Solid1_9: THREE.Mesh
    Solid1_10: THREE.Mesh
    Solid1_11: THREE.Mesh
    Solid2: THREE.Mesh
    Solid1_12: THREE.Mesh
    Solid1_39: THREE.Mesh
    Solid1_40: THREE.Mesh
    Solid1_41: THREE.Mesh
    Solid1_42: THREE.Mesh
    Solid1_43: THREE.Mesh
    Solid1_44: THREE.Mesh
    Solid1_45: THREE.Mesh
    Solid1_46: THREE.Mesh
    Solid1_47: THREE.Mesh
    Solid1_48: THREE.Mesh
    Solid1_49: THREE.Mesh
    Solid1_14: THREE.Mesh
    Solid1_15: THREE.Mesh
    Solid1_16: THREE.Mesh
    Solid1_17: THREE.Mesh
    Solid1_18: THREE.Mesh
    Solid1_19: THREE.Mesh
    Solid1_20: THREE.Mesh
    Solid1_21: THREE.Mesh
    솔리드1_1: THREE.Mesh
  }
  materials: {
    Default1: THREE.MeshStandardMaterial
    Default2: THREE.MeshStandardMaterial
    M199194189: THREE.MeshStandardMaterial
    M767676: THREE.MeshStandardMaterial
    M262626: THREE.MeshStandardMaterial
    Default11: THREE.MeshStandardMaterial
    Default: THREE.MeshStandardMaterial
    Default3: THREE.MeshStandardMaterial
    whitesolid2: THREE.MeshStandardMaterial
    whitemediumglossplastic: THREE.MeshStandardMaterial
    whitesolid: THREE.MeshStandardMaterial
    chromiumplate: THREE.MeshStandardMaterial
    polishedsteel: THREE.MeshStandardMaterial
    pwmt11000: THREE.MeshStandardMaterial
    blacklowglossplastic: THREE.MeshStandardMaterial
    whitesolid1: THREE.MeshStandardMaterial
    brushedsteel: THREE.MeshStandardMaterial
    yellowmediumglossplastic: THREE.MeshStandardMaterial
    M202209238: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/WallEAssembly.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-0.008, 0, 0]} userData={{ name: 'WallEBody:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1.geometry}
          material={materials.Default1}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.01, 0.036, -0.035]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        userData={{ name: 'PCBModel:1' }}>
        <group scale={0.01} userData={{ name: 'Solid1' }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_23.geometry}
            material={materials.Default1}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_24.geometry}
            material={materials.Default3}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_25.geometry}
            material={materials.Default2}
          />
        </group>
      </group>
      <group
        position={[-0.037, 0.001, 0.017]}
        rotation={[-Math.PI / 2, 0, 0]}
        userData={{ name: 'Battery_9V:1' }}>
        <group scale={0.01} userData={{ name: 'Solid1' }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_26.geometry}
            material={materials.M199194189}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_27.geometry}
            material={materials.M767676}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_28.geometry}
            material={materials.M262626}
          />
        </group>
      </group>
      <group
        position={[0.042, 0.005, -0.001]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        userData={{ name: 'TreadAssembly:1' }}>
        <group position={[-0.009, 0.004, -0.011]} userData={{ name: 'TreadWheeled:1' }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_3.geometry}
            material={materials.Default11}
            scale={0.01}
            userData={{ name: 'Solid1' }}
          />
        </group>
        <group position={[-0.012, 0.003, 0.006]} userData={{ name: 'TreadWheeledCover:1' }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_4.geometry}
            material={materials.Default11}
            scale={0.01}
            userData={{ name: 'Solid1' }}
          />
        </group>
      </group>
      <group
        position={[0.009, -0.006, 0.004]}
        rotation={[0, Math.PI / 2, 0]}
        userData={{ name: 'Servo Motor SG90:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.솔리드1.geometry}
          material={materials.Default}
          scale={0.01}
          userData={{ name: '솔리드1' }}
        />
      </group>
      <group
        position={[-0.008, 0.078, 0]}
        rotation={[-Math.PI / 2, 0, -Math.PI]}
        userData={{ name: 'BodyLid:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_5.geometry}
          material={materials.Default1}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[0.043, -0.022, 0.016]}
        rotation={[-2.155, 0, 0]}
        userData={{ name: 'WheelBetter:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_6.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[0.036, -0.006, -0.002]}
        rotation={[-0.422, Math.PI / 2, 0]}
        userData={{ name: 'Spur Gear2:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_7.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[0.036, -0.025, 0.02]}
        rotation={[-0.936, Math.PI / 2, 0]}
        userData={{ name: 'Spur Gear1:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_8.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[0.031, 0, 0.05]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        userData={{ name: 'Arm:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_9.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[0.035, 0.064, 0.009]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        userData={{ name: 'ArmLength:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_10.geometry}
          material={materials.Default1}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[0.046, 0.071, 0.053]}
        rotation={[0, -0.435, -Math.PI / 2]}
        userData={{ name: 'Hand:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_11.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.008, 0.08, 0]}
        rotation={[-Math.PI / 2, 0, -3.09]}
        userData={{ name: 'Neck:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid2.geometry}
          material={materials.Default1}
          scale={0.01}
          userData={{ name: 'Solid2' }}
        />
      </group>
      <group
        position={[-0.007, 0.115, 0.008]}
        rotation={[0, 0.052, 0]}
        userData={{ name: 'Eyes:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_12.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.008, 0.059, 0.034]}
        rotation={[0, 0, Math.PI]}
        userData={{ name: 'Oled SH1106:1' }}>
        <group scale={0.01} userData={{ name: 'Solid1' }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_39.geometry}
            material={materials.whitesolid2}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_40.geometry}
            material={materials.whitemediumglossplastic}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_41.geometry}
            material={materials.whitesolid}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_42.geometry}
            material={materials.chromiumplate}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_43.geometry}
            material={materials.polishedsteel}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_44.geometry}
            material={materials.pwmt11000}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_45.geometry}
            material={materials.blacklowglossplastic}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_46.geometry}
            material={materials.whitesolid1}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_47.geometry}
            material={materials.brushedsteel}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_48.geometry}
            material={materials.yellowmediumglossplastic}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_49.geometry}
            material={materials.M202209238}
          />
        </group>
      </group>
      <group
        position={[-0.058, 0.005, -0.001]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        userData={{ name: 'TreadAssembly_MIR:1' }}>
        <group position={[-0.009, 0.004, 0.011]} userData={{ name: 'TreadWheeled_MIR:1' }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_14.geometry}
            material={materials.Default11}
            scale={0.01}
            userData={{ name: 'Solid1' }}
          />
        </group>
        <group position={[-0.012, 0.003, -0.006]} userData={{ name: 'TreadWheeledCover_MIR:1' }}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Solid1_15.geometry}
            material={materials.Default11}
            scale={0.01}
            userData={{ name: 'Solid1' }}
          />
        </group>
      </group>
      <group
        position={[-0.059, -0.047, 0.009]}
        rotation={[1.686, 0, -Math.PI]}
        userData={{ name: 'WheelBetter_MIR:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_16.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.049, -0.006, -0.002]}
        rotation={[-1.362, Math.PI / 2, 0]}
        userData={{ name: 'Spur Gear21_MIR:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_17.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.052, -0.025, 0.02]}
        rotation={[0.803, Math.PI / 2, 0]}
        userData={{ name: 'Spur Gear11_MIR:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_18.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.047, 0, 0.038]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        userData={{ name: 'Arm_MIR:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_19.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.052, 0.064, -0.002]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        userData={{ name: 'ArmLength_MIR:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_20.geometry}
          material={materials.Default1}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.062, 0.071, 0.041]}
        rotation={[Math.PI, -0.435, Math.PI / 2]}
        userData={{ name: 'Hand_MIR:1' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Solid1_21.geometry}
          material={materials.Default3}
          scale={0.01}
          userData={{ name: 'Solid1' }}
        />
      </group>
      <group
        position={[-0.025, -0.006, 0.004]}
        rotation={[-Math.PI, -Math.PI / 2, 0]}
        userData={{ name: 'Servo Motor SG90:2' }}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.솔리드1_1.geometry}
          material={materials.Default}
          scale={0.01}
          userData={{ name: '솔리드1' }}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/WallEAssembly.glb')
